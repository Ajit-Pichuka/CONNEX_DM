name: "cherry pick"

on:
  workflow_dispatch:
    inputs:
      config_name:
        required: true
        description: config filename (from dev bracnh)
      base:
        type: choice
        description: target environment
        options:
          - qa
          - uat
          - prod
      tgt_env_sufix:
        required: false
        description: (Optional) Target Environment Sufix. Leave blank by default. Only for multi target environments
      UserComment:
        required: false
        description: (Optional) User Functional Comments
        default: ''
      validation_parameter:
        description: '(Optional) Validation Task Parameter Name'
        required: false
        default: ''  
        
jobs:
  draft-new-release:
    name: cherry pick from ${{github.ref_name}} to ${{ github.event.inputs.base }}${{ github.event.inputs.tgt_env_sufix }} PR
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.base }}  
    steps:
      - name: Input Parameters
        run: |
           echo '${{ toJSON(github.event.inputs) }}'
           
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: shyaml
        run: |
          pip3 --no-cache-dir install shyaml

      - name: copy config
        run: |
          git checkout origin/dev
          cp configs/${{github.event.inputs.config_name}} ..
          git checkout ${{github.ref_name}}

      # In order to make a commit, we need to initialize a user.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Create a release
        run: |
          echo "branch_name=$(echo "cp_release")" >> $GITHUB_ENV
          git checkout -b cp_release/${{ github.run_id }} origin/${{ github.event.inputs.base }}${{ github.event.inputs.tgt_env_sufix }}
          cd change_scripts
          git checkout origin/${{github.ref_name}} -- $(cat ../../${{github.event.inputs.config_name}} | shyaml get-values files)
          git commit -m "cp_release/${{ github.run_id }}" -a
          cd .. && rm ../${{github.event.inputs.config_name}}
          
      - name: Push new branch
        run: git push origin ${{env.branch_name}}/${{ github.run_id }}

      - name: Checkout cicd-actions
        uses: actions/checkout@v3
        with:
          repository: danone/onesource.cicd.actions
          token: ${{ secrets.ORCHESTRATION_PAT }}
          path: act
          
      - name: Create pull request
        uses: ./act/external/create-pull-request
        env:
          GITHUB_TOKEN: ${{ secrets.ORCHESTRATION_PAT }}
        with:
          head: ${{env.branch_name}}/${{ github.run_id }}
          base: ${{ github.event.inputs.base }}${{ github.event.inputs.tgt_env_sufix }}
          title: ${{github.ref_name}} > ${{ github.event.inputs.base }}${{ github.event.inputs.tgt_env_sufix }} | ${{github.event.inputs.config_name}} | ${{ github.run_id }}
          # reviewers: ${{ github.actor }}
          body: |
            Hi @${{ github.actor }}!
            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            After a sucessfull merge of these branches, the new workflow will trigger, which will deploy new changes to the ${{ github.event.inputs.base }}${{ github.event.inputs.tgt_env_sufix }} env.
            Functional_Comment: ${{ github.event.inputs.UserComment }}
            Functional_Validation: %%${{ github.event.inputs.validation_parameter }}%%
